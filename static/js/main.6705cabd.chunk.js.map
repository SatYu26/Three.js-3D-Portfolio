{"version":3,"sources":["assets/space.jpg","assets/satyam.jpeg","assets/moon.jpg","assets/normal.jpg","main/main.js","App.js","index.js"],"names":["ThreeMain","scene","THREE","camera","window","innerWidth","innerHeight","renderer","canvas","document","querySelector","setPixelRatio","devicePixelRatio","setSize","position","setZ","setX","render","geometry","material","color","torus","add","pointLight","set","ambientLight","Array","fill","forEach","star","map","randFloatSpread","x","y","z","spaceTexture","load","space","background","satyuTexture","satyam","satyu","moonTexture","moonimg","normalTexture","normal","moon","normalMap","moveCamera","t","body","getBoundingClientRect","top","rotation","onscroll","animate","requestAnimationFrame","ref","mount","Component","App","className","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6705cabd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/space.80687b01.jpg\";","export default __webpack_public_path__ + \"static/media/satyam.33e58648.jpeg\";","export default __webpack_public_path__ + \"static/media/moon.a2edaf85.jpg\";","export default __webpack_public_path__ + \"static/media/normal.573c0a93.jpg\";","import \"./style.css\";\nimport * as THREE from \"three\";\n// import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nimport React, { Component } from \"react\";\nimport space from \"../assets/space.jpg\";\nimport satyam from \"../assets/satyam.jpeg\";\nimport moonimg from \"../assets/moon.jpg\";\nimport normal from \"../assets/normal.jpg\";\n\nclass ThreeMain extends Component {\n  componentDidMount() {\n    // Setup\n\n    const scene = new THREE.Scene();\n\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n\n    const renderer = new THREE.WebGLRenderer({\n      canvas: document.querySelector(\"#bg\"),\n    });\n\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    camera.position.setZ(30);\n    camera.position.setX(-3);\n\n    renderer.render(scene, camera);\n\n    // Torus\n\n    const geometry = new THREE.TorusGeometry(10, 3, 16, 100);\n    const material = new THREE.MeshStandardMaterial({ color: 0xff6347 });\n    const torus = new THREE.Mesh(geometry, material);\n\n    scene.add(torus);\n\n    // Lights\n\n    const pointLight = new THREE.PointLight(0xffffff);\n    pointLight.position.set(5, 5, 5);\n\n    const ambientLight = new THREE.AmbientLight(0xffffff);\n    scene.add(pointLight, ambientLight);\n\n    // Helpers\n\n    // const lightHelper = new THREE.PointLightHelper(pointLight);\n    // const gridHelper = new THREE.GridHelper(200, 50);\n    // scene.add(lightHelper, gridHelper);\n\n    // const controls = new OrbitControls(camera, renderer.domElement);\n\n    function addStar() {\n      const geometry = new THREE.SphereGeometry(0.25, 24, 24);\n      const material = new THREE.MeshStandardMaterial({ color: 0xffffff });\n      const star = new THREE.Mesh(geometry, material);\n\n      const [x, y, z] = Array(3)\n        .fill()\n        .map(() => THREE.MathUtils.randFloatSpread(100));\n\n      star.position.set(x, y, z);\n      scene.add(star);\n    }\n\n    Array(200).fill().forEach(addStar);\n\n    // Background\n\n    const spaceTexture = new THREE.TextureLoader().load(space);\n    scene.background = spaceTexture;\n\n    // Avatar\n\n    const satyuTexture = new THREE.TextureLoader().load(satyam);\n\n    const satyu = new THREE.Mesh(\n      new THREE.BoxGeometry(3, 3, 3),\n      new THREE.MeshBasicMaterial({ map: satyuTexture })\n    );\n\n    scene.add(satyu);\n\n    // Moon\n\n    const moonTexture = new THREE.TextureLoader().load(moonimg);\n    const normalTexture = new THREE.TextureLoader().load(normal);\n\n    const moon = new THREE.Mesh(\n      new THREE.SphereGeometry(3, 32, 32),\n      new THREE.MeshStandardMaterial({\n        map: moonTexture,\n        normalMap: normalTexture,\n      })\n    );\n\n    scene.add(moon);\n\n    moon.position.z = 30;\n    moon.position.setX(-10);\n\n    satyu.position.z = -5;\n    satyu.position.x = 2;\n\n    // Scroll Animation\n\n    function moveCamera() {\n      const t = document.body.getBoundingClientRect().top;\n      moon.rotation.x += 0.05;\n      moon.rotation.y += 0.075;\n      moon.rotation.z += 0.05;\n\n      satyu.rotation.y += 0.01;\n      satyu.rotation.z += 0.01;\n\n      camera.position.z = t * -0.01;\n      camera.position.x = t * -0.0002;\n      camera.rotation.y = t * -0.0002;\n    }\n\n    document.body.onscroll = moveCamera;\n    moveCamera();\n\n    // Animation Loop\n\n    function animate() {\n      requestAnimationFrame(animate);\n\n      torus.rotation.x += 0.01;\n      torus.rotation.y += 0.005;\n      torus.rotation.z += 0.01;\n\n      moon.rotation.x += 0.005;\n\n      // controls.update();\n\n      renderer.render(scene, camera);\n    }\n\n    animate();\n  }\n  render() {\n    return <div ref={(ref) => (this.mount = ref)} />;\n  }\n}\n\nexport default ThreeMain;\n","import \"./App.css\";\nimport React from \"react\";\nimport ThreeMain from \"./main/main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThreeMain />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}